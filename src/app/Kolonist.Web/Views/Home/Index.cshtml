@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div id="build-dialog" class="modal hide" data-backdrop="false">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Build something</h3>
    </div>
    <div class="modal-body">
        <div class="btn-group">
            <button class="btn">Woodworker</button>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn">Close</a>
        <a href="#" class="btn btn-primary">Save changes</a>
    </div>
</div>
<div id="container" style="min-width: 1024px; width: 100%; min-height: 768px; height: 100%; position: static">
</div>

@section Scripts{

    <script>

        var renderer;

        function init() {
            var $container = $('#container');
            renderer = new Kolonist.Renderer($container);

            renderer.init({ width: $container.innerWidth(), height: $container.innerHeight() });

            renderer.mouse.registerClickHandler(function (data) {
                if (data.point && data.isLeft()) {
                    var cube = new THREE.Mesh(
                        new THREE.CubeGeometry(5, 5, 5),
                        new THREE.MeshBasicMaterial({
                            color: 0x0000ff
                        })
                    );
                    cube.position.addSelf(new THREE.Vector3(data.point.x, data.point.y, data.point.z));

                    renderer.addMesh(cube);


                    $('#build-dialog').modal()
                        .css({
                            "left": data.x,
                            "top": data.y, 
                            "margin-left": 0,
                            "margin-top": 0,
                            "width": 'auto'
                        })
                    ;
                }
            });

            var light = new THREE.DirectionalLight(0xffffff);
            light.position.set(0, 0, 1).normalize();
            renderer.addMesh(light);

            renderer.loadMap('http://localhost:12930/api/map/1600');

            renderer.animate(function () {
                //mesh.rotation.x += 0.01;
                //mesh.rotation.y += 0.02;
            });

        }
        init();
        
    </script>
}